# -*- coding: utf-8 -*-
"""52000668 - lab 5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qsb1-NRMIX_DsT4OdP_-4jtwVwEvSvwS

# EXAMPLE
"""

import random 
import math


print("Example: ")
times = 8000
x = [random.randint(1, 6) for i in range(times)]
X = set(x)
print('x', x)
print('X', X)

# Probability distribution
P = [x.count(i)/ len(x) for i in X]
print('P', P)

# Cumulative distribution function
FX = sum(P[:3])
print('FX', FX)

# Characteristic parameters of random variables
# Expectations 
# symbol μ
EX = 0
for x in X:
  EX = EX + (x * P[x - 1])
print('EX', EX)

# Variance
VarX = 0
for x in X:
  VarX = VarX + (x - EX) * (x - EX) * P[x - 1]
print('VarX', VarX)

# Standard Deviation
SD = math.sqrt(VarX)
print('SD', SD)

# Standard Score - SC
SC = (x - EX) / SD

print('SC', SC)

"""# bai 1"""

# ex1
import numpy as np
import math

x = np.random.choice([0, 1, 2, 3, 4, 5], 3650, p=[0.1, 0.2, 0.3, 0.2, 0.15, 0.05])

print('x:', x)
print('len(x):', len(x))

# (a) Determine the values ​​of the random variable X and store it in variable X.
X = set(list(x))
print('X:', X)

# (b) Calculate the probability distribution function of the random variable X and store it in variable P (list type).
P = [list(x).count(i) / len(x) for i in X]
print('P:', P)

# (c) Calculate the characteristic parameters of random variable X including: 
# expectation, variance, standard deviation.
EX = 0
for x in X:
  EX = EX + (x * P[x - 1])
print('EX:', EX)

VarX = 0
for x in X:
  VarX = VarX + (x - EX) * (x - EX) * P[x - 1]
print('VarX:', VarX)

SD = math.sqrt(VarX)
print('SD:', SD)

# (d) Calculate the probability of having 3 or more emergency cases.
print('P', sum(P[3:]))

"""# bai 2"""

# Write a program for flipping 2 coins experiment in 10,000 times, calling X the number of faces that appear on each roll.
import numpy as np
import math

times = 10000
x = list(np.random.choice([0, 1, 2], times, p=[0.25, 0.5, 0.25]))

# (a) Save the results of flipping 2 coins into the variable x (list type). 
# For example, x = [0, 2, 1] represents 3 times of launching,
# the first time no coin has a head, the second time both of them have a head, 
# the third time has only one head.
print('x', x)

# (b) Find the values ​​of random variable X and save to variable X.
X = set(x)
print('X:', X)

# c Calculate the probability distribution function of the random variable X and store it in variable P (list type).
P = [x.count(i) / len(x) for i in X]
print('P:', P)

# (d) Calculate the characteristic parameters of random variable X including: 
# expectation, variance, standard deviation.
EX = 0
for i in X:
  EX = EX + (i * P[i - 1])
print('EX:', EX)

VarX = 0
for i in X:
  VarX = VarX + (i - EX) * (i - EX) * P[i - 1]

print('VarX:', VarX)

SD = math.sqrt(VarX) 
print('SD:', SD)

# (e) Calculate the probability to have at least one head.
p = 1 - P[0]
print('p', p)